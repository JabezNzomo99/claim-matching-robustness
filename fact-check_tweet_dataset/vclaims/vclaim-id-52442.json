{"title": "PolitiFact - Did software cause Wisconsin's unemployment backlogs? Not quite, but it did delay payments", "subtitle": "In Wisconsin, the surge in unemployment claims due to the COVID-19 pandemic has led to a surge of frustration from those", "author": "www.politifact.com", "date": null, "vclaim_id": "vclaim-id-52442", "url": "https://www.politifact.com/factchecks/2020/jul/03/chris-kapanga/did-software-cause-wisconsins-unemployment-backlog/", "vclaim": "In Wisconsin, the surge in unemployment claims due to the COVID-19 pandemic has led to a surge of frustration from those out of work who are relying on the state for help.\n\nMore than 150,000 applicants have faced issues with claims, resulting in weeks -- and sometimes months -- without getting much-needed payments.\n\nSo far, the state Department of Workforce Development, which oversees the payments, has blamed the problem largely on a decades-old software program that powers the system.\n\nBut state Sen. Chris Kapenga, R- Delafield, has a different take on blaming software for the backlog.\n\n\"It is a complete lie,\" Kapenga said in a June 21, 2020 interview on WTMJ radio. \"The software they\u2019re using for back-end processing has nothing to do with the problems that are caused right now.\"\n\nHe went on to say he believes mismanagement is to blame for the issues, as well as a lack of employees and a failure to have a plan to handle an inundation of claims.\n\nIs he right that the Evers administration is wrongly blaming the software system?\n\nWhen asked to provide backup for the claim, Kapenga said that the software can\u2019t be the root of the problem, because the problems leading to the backlogs are actually starting before the computer system, known as COBOL, would even be involved.\n\n\"A basic explanation to help better understand this issue is that COBOL is simply the \u2018delivery person\u2019 that takes the check to the claimant once all the other systems and processes determine who, where and how much,\" he said in a June 24, 2020 email. \"The massive backlog in payment of claims is because one or all of the pieces of information required to make the delivery has not yet been determined.\n\n\"The system can\u2019t do its job if it isn\u2019t told what to do.\"\n\nHe said that in order to get the who, where and how much into the system, the department needs more staff to do the work, which is where the problem lies.\n\n\"I have stated publicly that they should have immediately pulled people in (from existing resources in other agencies) and worked 24/7 to manage the load,\" he said.\n\nKapenga\u2019s view is supported by recent media reports, which have explored the same issue in other states that use the software to power their systems.\n\nAn April 22, 2020 report from Wired.com, noted that COBOL is typically only used for back-office tasks, such as processing forms and payments, not for the front-end public interface that applicants see when they log on to the state website.\n\nBut the article highlights one issue that can cause backups when it comes to COBOL -- the fact making changes to the system requires coders familiar with the 60-year-old program.\n\nSo any change to the rules, such as the recent lifting of the one-week waiting period for new claims, has to be written into the code. And that takes time.\n\nBen Jedd, communications director for the Department of Workforce Development said in a June 24, 2020 email exchange that the reprogramming of the software did take time, resulting in some delays.\n\nFor instance, the code had to be rewritten to handle three new federal programs that gave Wisconsinites more money, such as the $600 enhanced payment.\n\nWhat\u2019s more, he said, each of the changes had to be handled one at a time.\n\n\"The linear nature of implementations of the new programs results in delays and increased backlog of claims for (the federal programs),\" he said. \"Additionally, due to the archaic nature of the system and lack of automation, processing of claims and subsequent release of benefits payments to claimants, requires a significant amount of manual exception processing further adding to the backlog.\"\n\nJedd said that programming was done while state lawmakers were waiting to pass a bill that waived the standard one-week waiting period before getting benefits.\n\nOnce the law was signed, the programs had to be tested to be sure they were running correctly. That took two weeks.\n\nAside from the reprogramming, Jedd said other issues have contributed to the backlog, starting with ramping up staffing. That includes new hires to process claims and to sort out errors and adjudicate unusual circumstances.\n\nAccording to a June 19, 2020 article in the Milwaukee Journal Sentinel, hundreds of new staff members had to be hired and trained, a process that took months. In all, the department says it has hired more than 1,000 people, including for the call center.\n\n\"With unemployment as low as it was, the staffing levels were as low as they'd been in years,\" Jedd said. \"When the pandemic hit, we had to go from the lowest staffing level to the level needed to address this situation, which we have done as quickly as possible with the required recruiting, vetting, hiring, and training.\n\n\"It was not possible to onboard staff at the necessary levels overnight.\"\n\nKapenga claimed the Evers administration is wrong to blame old computer software being used to process unemployment claims, declaring it \"has nothing to do with\" the backlog.\n\nTo be sure, there were many other problems leading to the backlog, including the sudden volume of claims and the need to ramp up staffing overnight. What\u2019s more, there were several changes made to the system, including new payments and the waiver of a one-week waiting period. That\u2019s where Kapenga is wrong to say the computer system had no role in delays.\n\nThe decades-old system had to be reprogrammed to accommodate those changes -- and news reports note only coders familiar with the programs could get the job done.", "lang": "en"}