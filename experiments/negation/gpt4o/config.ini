[data]
dataset = clef2021-checkthat-task2a--english

[model]
model_string = gpt-4o
temperature = 0.9
baseline_prompt_template = "
    You will receive an input post made on a social media platfform
    and its corresponding fact check. 

    Your task is to:
    1. Identify the main claim in the input post. 
    2. Negate the claim in {number_of_samples} different ways by 
    introducing as minimal edits as possible. 
    
    Ensure that:
    1. The negated claim contains all the information from the original claim
    2. The negated claim is grammatically correct and maintains coherence 
    3. The fact check is still applicable to the negated claims

    Let's walk step by step on an example.   
    
    1. Given an input post:  "It is safe for individuals infected with COVID-19 to go to work."  
       Fact check: "This claim is false. Individuals infected with COVID-19 should not go to work." 
    2. Identify the main claim: The main claim in this post is : "It is safe for individuals infected with COVID-19 to go to work."   
    3. Rewritting the post by negating the main claim would be: {{
        "negated_claims": [
            "It is not safe for individuals infected with COVID-19 to go to work.",
            "It is safe for individuals infected with COVID-19 to not go to work.",
            "It is safe for individuals not infected with COVID-19 to go to work."
        ]
    }}  
    
    Please provide your negated claims in the following JSON format:
    Response Format: {{
        "negated_claims": [
            "negated claim 1",
            "negated claim 2",
            "negated claim 3"
        ]
    }}
    
    Input Post: {claim}
    Fact Check: {fact_check}
    Generate your response in the specified JSON format."

worstcase_prompt_template = "
    You will receive an input post made on a social media platfform
    and its corresponding fact check. 

    Your task is to:
    1. Identify the main claim in the input post.
    2. Double negate the claim in {number_of_samples} different ways by 
    introducing as minimal edits as possible. 
    
    Ensure that:
    1. The negated claim contains all the information from the original claim
    2. The negated claim is grammatically correct and maintains coherence 
    3. The fact check is still applicable to the negated claims

    Let's walk step by step on an example.   
    
    1. Given an input post:  "It is safe for individuals infected with COVID-19 to go to work."  
       Fact check: "This claim is false. Individuals infected with COVID-19 should not go to work." 
    2. Identify the main claim: The main claim in this post is : "It is safe for individuals infected with COVID-19 to go to work."   
    3. Rewritting the post by negating the main claim would be: {{
        "negated_claims": [
            "It is not false that it is safe for individuals infected with COVID-19 to go to work.",
            "It is safe for individuals not infected with COVID-19 to not go to work.",
            "It is not safe for individuals not infected with COVID-19 not to go to work.",
            "It is not false that it is not safe for individuals infected with COVID-19 to go to work.",
            "It is not safe for individuals not infected with COVID-19 not to go to work."
        ]
    }}  
    
    Please provide your negated claims in the following JSON format:
    Response Format: {{
        "negated_claims": [
            "negated claim 1",
            "negated claim 2",
            "negated claim 3",
            "negated claim 4",
            "negated claim 5"
        ]
    }}
    
    Input Post: {claim}
    Fact Check: {fact_check}
    Generate your response in the specified JSON format."

verification_prompt_template =  "You are now a fact checker tasked with verifying whether a fact check is applicable to a list of rewritten tweets. You will 
    receive three inputs:
    1. Fact-check: A statement supporting or refuting a claim.
    2. Original Tweet: The source tweet conveying the claim.
    3. Rewritten Tweets: A list of tweets rewritten based on the original tweet by negating the main claim.

    Your task: For each rewritten tweet, evaluate:
    - Does the fact-check apply to it i.e. is the fact check helpful in verifying the rewritten tweet?
    - Does the rewritten tweet read naturally even though it is negated?

    Your output:
    - For each of the rewritten tweets, provide a binary label indicating whether the constraints above are satisfied or not. 

    **Example**:
    Fact-check: "Individuals infected with COVID-19 should not go to work."
    Original Tweet: "It is safe for individuals infected with COVID-19 to go to work."

    Rewritten tweets:  
    - "It is safe for individuals infected with COVID-19 to not go to work."
    - "It is safe for individuals not infected with COVID-19 to go to work."
    - "It is not safe for individuals not infected with COVID-19 not to go not to work."

    Output:
    {{
        "labels": [1, 1, 0]
    }}

    Inputs:
    Fact Check: {fact_check}
    Original Tweet: {claim}
    Rewritten Tweets: {rewrites}
    Generate your response in the specified JSON format."

[generation]
number_of_samples = 3

[verifier]
model_string = microsoft/deberta-v3-base
model_path = experiments/train_verifier/debertaV3/
num_labels = 2

[evaluation]
data_directory = path_to_data_directory
embedding_models = all-mpnet-base-v2,all-MiniLM-L12-v2,sentence-t5-base,sentence-t5-large,all-distilroberta-v1,hkunlp/instructor-base,hkunlp/instructor-large,nvidia/NV-Embed-v2,Salesforce/SFR-Embedding-Mistral,sentence-t5-large-ft,all-mpnet-base-v2-ft
original_baseline_path = orig_baseline_negation_queries.tsv
edited_baseline_path = edited_baseline_negation_queries.tsv
original_worstcase_path = orig_worstcase_negation_queries.tsv
edited_worstcase_path = edited_worstcase_negation_queries.tsv